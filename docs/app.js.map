{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["function onAccordionItemToggle(e) {\n    let openElements = document.querySelectorAll('details[open]');\n    if (!e.target.open) return;\n    for(let elem of openElements){\n        if (elem != e.target) {\n            elem.open = false;\n        }\n    }\n}\nclass Filter {\n    filterControls = {\n        itemClass: 'js-filter',\n        activeClass: 'js-active',\n        list: null,\n\n        higlightActiveFilterItem: function (current) {\n            for (let elem of this.list) {\n                if (elem.dataset.filter != current.dataset.filter)\n                    elem.classList.remove(this.activeClass);\n                else elem.classList.add(this.activeClass);\n            }\n            current.classList.add(this.activeClass);\n        },\n    };\n\n    filterTarget = {\n        itemClass: 'js-filter-target',\n        activeClass: 'js-active',\n        list: null,\n\n        resetFilter: function () {\n            for (let elem of this.list) {\n                elem.classList.add(this.activeClass);\n            }\n        },\n\n        filterItems: function (filter) {\n            if (filter) {\n                for (let elem of this.list) {\n                    if (elem.dataset.filter == filter) elem.classList.add(this.activeClass);\n                    else elem.classList.remove(this.activeClass);\n                }\n            }\n        }\n\n    };\n    constructor(block, params = null) {\n        try {\n            if (params.controlsClass)\n                this.filterControls.itemClass = params.controlsClass;\n            if (params.targetClass)\n                this.filterTarget.itemClass = params.targetClass;\n        } catch (e) {}\n\n        this.filterTarget.list = block.querySelectorAll(`.${this.filterTarget.itemClass}`);\n        this.filterControls.list = block.querySelectorAll(`.${this.filterControls.itemClass}`);\n        this.init();\n    }\n\n    init() {\n        this.filterTarget.resetFilter();\n        for (let trigger of this.filterControls.list) {\n            trigger.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.filterControls.higlightActiveFilterItem(e.target);\n                this.filterTarget.resetFilter();\n                this.filterTarget.filterItems(e.target.dataset.filter);\n            })\n        }\n    }\n}\nclass Switch {\n    params = {\n        switchClass: 'js-switch',\n        sectionHiddenClass: 'section_hidden',\n        tabClass: 'switch__label',\n        tabActiveClass: 'switch__label_active',\n        sectionClass: 'js-section-switched',\n    }\n    constructor() {\n        this.sectionList = document.querySelectorAll(`.${this.params.sectionClass}`);\n        this.tabList = document.querySelectorAll(`.${this.params.tabClass}`)\n        this.switch = document.querySelector(`.${this.params.switchClass}`);\n        this.init();\n    }\n    init() {\n        this.switch.addEventListener('change', (e) => {\n            for (let tab of this.tabList) this.setActiveTab(tab);\n            for (let section of this.sectionList) this.toggleSection(section);\n        })\n    }\n    setActiveTab(tab) {\n        tab.classList.toggle(this.params.tabActiveClass);\n    }\n    toggleSection(section) {\n        section.classList.toggle(this.params.sectionHiddenClass);\n    }\n}\nfunction togglePasswordVisibility(e) {\n    const input = e.target.previousSibling;\n    input.type = (input.type == 'password') ? \"text\" : \"password\";\n}\nlet activeModal;\nfor (let modalTrigger of document.querySelectorAll('.js-open')) {\n    modalTrigger.addEventListener('click', openModal);\n}\n\nfunction openModal(e) {\n    e.preventDefault();\n    const modalId = e.target.dataset.modal;\n    openPopup(modalId);\n}\n\nfunction openPopup(modalId) {\n    const modal = document.querySelector(`.modal__wrapper[data-modal=\"${modalId}\"]`);\n    if (activeModal) closeModal(activeModal);\n    activeModal = modal;\n    modal.classList.add('modal__wrapper_open');\n    addCloseModalHandler(modal);\n    disableWindowScroll(true);\n}\n\nfunction addCloseModalHandler(modal) {\n    const eventParams = {\n        once: true\n    };\n    modal.querySelector('.js-close').addEventListener('click', () =>\n        closeModal(modal), eventParams);\n\n    modal.addEventListener('click', (e) => {\n        if (!e.target.closest('.modal')) closeModal(modal);\n    }, eventParams)\n\n    window.addEventListener('keydown', function (event) {\n        if (event.code == 'Escape') closeModal(modal);\n    }, eventParams);\n\n}\n\nfunction closeModal(modal) {\n    activeModal.classList.remove('modal__wrapper_open');\n    disableWindowScroll(false);\n}\n\nfunction disableWindowScroll(flag) {\n    if (flag)\n        document.documentElement.classList.add('scroll-disabled');\n    else\n        document.documentElement.classList.remove('scroll-disabled');\n}\nlet labels = {\n    'expanded': 'Свернуть все',\n    'default': 'Развернуть все'\n}\n\nfunction expandCalendar(e) {\n    e.preventDefault();\n    let isExpand = e.currentTarget.dataset.expand;\n    e.currentTarget.dataset.expand = (isExpand) ? \"\" : \"true\";\n    e.currentTarget.querySelector('.js-expand-label').innerText = (e.currentTarget.dataset.expand) ? labels['expanded'] : labels['default'];\n    \n    e.currentTarget.closest('.schedule').querySelector('.js-expand-target').classList.toggle('schedule__inner_fold');\n}\n\nfor (let button of document.querySelectorAll('.js-expand-trigger')) {\n    button.addEventListener('click', expandCalendar);\n}\n\nfor(let schedule of document.querySelectorAll('.spec-row__calendar .schedule__inner')){\n    new SimpleBar(schedule);\n}\nconst loginTabFilter = new Filter(document.body, {\n    controlsClass: \"js-modal-filter\",\n    targetClass: \"js-modal-tab\"\n});\n\nfor(let icon of document.querySelectorAll('.js-password-toggle')){\n    icon.addEventListener('click', togglePasswordVisibility);\n}\nconst openButton = document.querySelector('.js-menu-toggle');\nconst header = document.querySelector('.header-mobile');\nopenButton.addEventListener('click', toggleMenu);\n\nfunction toggleMenu() {\n    header.classList.toggle('js-open');\n    isOpen = header.classList.contains('js-open');\n    disableWindowScroll(isOpen);\n}\nconst sidebarMenu = document.querySelector('.sidebar-menu');\nif(sidebarMenu)\n    document.querySelector('.js-sidebar-open').addEventListener('click', function (e) {\n    sidebarMenu.classList.toggle('sidebar-menu_unfold');\n})"],"file":"layout/app.js"}