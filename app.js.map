{"version":3,"sources":["contact/contact.js","filter/filter.js","filter/switch.js","input/input.js","modal/modal.js","schedule/schedule.js","header/header.js","menu/sidebar-menu.js","_login.js","_order.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"layout/app.js","sourcesContent":["function onAccordionItemToggle(e) {\n    let openElements = document.querySelectorAll('details[open]');\n    if (!e.target.open) return;\n    for(let elem of openElements){\n        if (elem != e.target) {\n            elem.open = false;\n        }\n    }\n}","class Filter {\n    filterControls = {\n        itemClass: 'js-filter',\n        activeClass: 'js-active',\n        list: null,\n\n        higlightActiveFilterItem: function (current) {\n            for (let elem of this.list) {\n                if (elem.dataset.filter != current.dataset.filter)\n                    elem.classList.remove(this.activeClass);\n                else elem.classList.add(this.activeClass);\n            }\n            current.classList.add(this.activeClass);\n        },\n    };\n\n    filterTarget = {\n        itemClass: 'js-filter-target',\n        activeClass: 'js-active',\n        list: null,\n\n        resetFilter: function () {\n            for (let elem of this.list) {\n                elem.classList.add(this.activeClass);\n            }\n        },\n\n        filterItems: function (filter) {\n            if (filter) {\n                for (let elem of this.list) {\n                    if (elem.dataset.filter == filter) elem.classList.add(this.activeClass);\n                    else elem.classList.remove(this.activeClass);\n                }\n            }\n        }\n\n    };\n    constructor(block, params = null) {\n        try {\n            if (params.controlsClass)\n                this.filterControls.itemClass = params.controlsClass;\n            if (params.targetClass)\n                this.filterTarget.itemClass = params.targetClass;\n        } catch (e) {}\n\n        this.filterTarget.list = block.querySelectorAll(`.${this.filterTarget.itemClass}`);\n        this.filterControls.list = block.querySelectorAll(`.${this.filterControls.itemClass}`);\n        this.init();\n    }\n\n    init() {\n        this.filterTarget.resetFilter();\n        for (let trigger of this.filterControls.list) {\n            trigger.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.filterControls.higlightActiveFilterItem(e.target);\n                this.filterTarget.resetFilter();\n                this.filterTarget.filterItems(e.target.dataset.filter);\n            })\n        }\n    }\n}","class Switch {\n    params = {\n        switchClass: 'js-switch',\n        sectionHiddenClass: 'section_hidden',\n        tabClass: 'switch__label',\n        tabActiveClass: 'switch__label_active',\n        sectionClass: 'js-section-switched',\n    }\n    constructor() {\n        this.sectionList = document.querySelectorAll(`.${this.params.sectionClass}`);\n        this.tabList = document.querySelectorAll(`.${this.params.tabClass}`)\n        this.switch = document.querySelector(`.${this.params.switchClass}`);\n        this.init();\n    }\n    init() {\n        this.switch.addEventListener('change', (e) => {\n            for (let tab of this.tabList) this.setActiveTab(tab);\n            for (let section of this.sectionList) this.toggleSection(section);\n        })\n    }\n    setActiveTab(tab) {\n        tab.classList.toggle(this.params.tabActiveClass);\n    }\n    toggleSection(section) {\n        section.classList.toggle(this.params.sectionHiddenClass);\n    }\n}","function togglePasswordVisibility(e) {\n    const input = e.target.previousSibling;\n    input.type = (input.type == 'password') ? \"text\" : \"password\";\n}","let activeModal;\n\nfunction openModal(e) {\n  e.preventDefault();\n  const modalId = e.target.dataset.modal;\n  openPopup(modalId);\n}\n\nfunction openPopup(modalId) {\n  const modal = document.querySelector(\n    `.modal__wrapper[data-modal=\"${modalId}\"]`\n  );\n  if (activeModal) closeModal(activeModal);\n  activeModal = modal;\n  modal.classList.add(\"modal__wrapper_open\");\n  addCloseModalHandler(modal);\n  disableWindowScroll(true);\n}\n\nfunction addCloseModalHandler(modal) {\n  const eventParams = {\n    once: true,\n  };\n  modal\n    .querySelector(\".js-close\")\n    .addEventListener(\"click\", () => closeModal(modal), eventParams);\n\n  modal.addEventListener(\n    \"click\",\n    (e) => {\n      if (!e.target.closest(\".modal\")) closeModal(modal);\n    },\n    eventParams\n  );\n\n  window.addEventListener(\n    \"keydown\",\n    function (event) {\n      if (event.code == \"Escape\") closeModal(modal);\n    },\n    eventParams\n  );\n}\n\nfunction closeModal() {\n  activeModal.classList.remove(\"modal__wrapper_open\");\n  disableWindowScroll(false);\n}\n\nfunction disableWindowScroll(flag) {\n  if (flag) document.documentElement.classList.add(\"scroll-disabled\");\n  else document.documentElement.classList.remove(\"scroll-disabled\");\n}\n\nasync function getFormResult(e) {\n  const resultUrl = e.target.action;\n  if (resultUrl) {\n    const formData = new FormData(e.target);\n    let request = await fetch(\n      resultUrl\n      // {\n      //     method: 'POST',\n      //     body: formData\n      // }\n    );\n    let result = await request.text();\n    return result;\n  }\n}\n\nfunction updateModalContent(content, modal = activeModal) {\n  modal.querySelector(\".modal__body\").innerHTML = content;\n}\n","let labels = {\n  expanded: \"Свернуть все\",\n  default: \"Развернуть все\",\n};\n\nfunction expandCalendar(e) {\n  e.preventDefault();\n  let isExpand = e.currentTarget.dataset.expand;\n  e.currentTarget.dataset.expand = isExpand ? \"\" : \"true\";\n  e.currentTarget.querySelector(\".js-expand-label\").innerText = e.currentTarget\n    .dataset.expand\n    ? labels[\"expanded\"]\n    : labels[\"default\"];\n\n  e.currentTarget\n    .closest(\".schedule\")\n    .querySelector(\".js-expand-target\")\n    .classList.toggle(\"schedule__inner_fold\");\n}\n\n","const openButton = document.querySelector('.js-menu-toggle');\nconst header = document.querySelector('.header-mobile');\nopenButton.addEventListener('click', toggleMenu);\n\nfunction toggleMenu() {\n    header.classList.toggle('js-open');\n    isOpen = header.classList.contains('js-open');\n    disableWindowScroll(isOpen);\n}","const sidebarMenu = document.querySelector('.sidebar-menu');\nif(sidebarMenu)\n    document.querySelector('.js-sidebar-open').addEventListener('click', function (e) {\n    sidebarMenu.classList.toggle('sidebar-menu_unfold');\n})","const loginTabFilter = new Filter(document.body, {\n  controlsClass: \"js-modal-filter\",\n  targetClass: \"js-modal-tab\",\n});\n\nfor (let icon of document.querySelectorAll(\".js-password-toggle\")) {\n  icon.addEventListener(\"click\", togglePasswordVisibility);\n}\nlet forms = [document.forms.password, document.forms.change_password];\nfor (let form of forms) {\n  try {\n    form.addEventListener(\"submit\", async function (e) {\n      e.preventDefault();\n      result = await getFormResult(e);\n      if (result) updateModalContent(result);\n      else closeModal();\n    });\n  } catch (e) {}\n}\n","const orderForm = document.forms.order;\n\nfunction setOrderTime(e) {\n  let datestring = e.target.dataset.ordertime;\n  orderForm.ordertime.value = datestring;\n\n  const options = {\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n  let datetime = new Date(datestring);\n  orderForm.ordertime_format.value = datetime.toLocaleString(\"ru\", options);\n}\n\n\n","function initListeners() {\n  for (let button of document.querySelectorAll(\".js-expand-trigger\")) {\n    button.addEventListener(\"click\", expandCalendar);\n  }\n  for (let schedule of document.querySelectorAll(\n    \".spec-row__calendar .schedule__inner\"\n  )) {\n    new SimpleBar(schedule);\n  }\n  for (let time of document.querySelectorAll(\".js-order-time\")) {\n    time.addEventListener(\"click\", setOrderTime);\n  }\n  for (let modalTrigger of document.querySelectorAll(\".js-open\")) {\n    modalTrigger.addEventListener(\"click\", openModal);\n  }\n}\ninitListeners();\n\nInputmask({\"mask\": \"+7 (999) 999-99-99\"}).mask('[name=\"phone\"]');\nInputmask({\"mask\": \"+7 (999) 999-99-99\"}).mask('[inputmode=\"tel\"]');\n"]}